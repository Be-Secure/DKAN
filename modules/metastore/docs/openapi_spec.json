{
    "components": {
        "schemas": {
            "metastoreSchema": {
                "description": "A schema definition, see https://json-schema.org/",
                "anyOf": [
                    { "type": "string" },
                    { "type": "array"},
                    { "type": "object" }
                ]
            }
        },
        "parameters": {
            "showReferenceIds": {
                "name": "show-reference-ids",
                "in": "query",
                "description": "Add `&show_reference_ids` to return the identifiers generated by DKAN. Some identifiers are necessary to work with other API endpoints (Ex. datastore endpoints require the distribution identifier).",
                "schema": {
                    "type": "boolean",
                    "default": false
                },
                "allowEmptyValue": true
            },
            "schemaId": {
                "name": "schema_id",
                "in": "path",
                "description": "The name a of a specific schema. For instance, \"dataset.\"",
                "schema": {
                    "type": "string"
                },
                "required": true,
                "allowEmptyValue": false,
                "examples": []
            }
        }
    },
    "paths": {
        "/api/1/metastore/schemas": {
            "get": {
                "operationId": "metastore-get-schemas",
                "summary": "Get list of all schemas",
                "tags": [ "Metastore" ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Full collection of available metastore schemas"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/1/metastore/schemas/{schema_id}": {
            "get": {
                "operationId": "metastore-get-schema",
                "summary": "Get a specific schema",
                "tags": [ "Metastore" ],
                "parameters": [
                    { "$ref": "#/components/parameters/schemaId" }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/metastoreSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Schema not found"
                    }
                }
            }
        },
        "/api/1/metastore/schemas/{schema_id}/items": {
            "get": {
                "operationId": "metastore-get-all",
                "summary": "Get all items for a specific schema (e.g., \"dataset\")",
                "tags": [ "Metastore" ],
                "parameters": [
                    { "$ref": "#/components/parameters/schemaId" }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "Array of metastore items matching the chosen schema.",
                                    "items": {
                                        "oneOf": [
                                            { "type": "object" },
                                            { "type": "string" },
                                            { "type": "array" }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}